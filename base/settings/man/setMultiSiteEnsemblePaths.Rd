% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/setMultiSiteEnsemblePaths.R
\name{setMultiSiteEnsemblePaths}
\alias{setMultiSiteEnsemblePaths}
\title{Set paths to input file ensembles using a consistent pattern across sites}
\usage{
setMultiSiteEnsemblePaths(
  settings,
  n_reps,
  input_type = c("met", "poolinitcond", "soilinitcond"),
  path_template = "./{id}/{n}.nc",
  ...
)
}
\arguments{
\item{settings}{a PEcAn MultiSettings object}

\item{n_reps}{number of replicates to insert for each path.}

\item{input_type}{subsection of the \code{inputs} settings to be edited}

\item{path_template}{format for the paths to be inserted, as a \code{glue} string.
\code{{n}} will be replaced with each value of 1:\code{n_reps}, and \code{{id}} will be replaced with the siteid of each site}

\item{...}{additional variables to be interpolated into \code{path_template}}
}
\value{
updated settings object
}
\description{
Operates on one input section (met, poolinitcond, etc) at a time because
it's common to have different path conventions for met vs IC.
Under the hood it calls \code{build_pathset} for each site; if this is too
limited, consider calling that directly.
}
\examples{
s <- as.Settings(list(
  run = list(
    start.date = "TBD",
    site = list(),
    inputs = list(
      met = list(),
      poolinitcond = list()))))
m <- createMultiSiteSettings(s, c("a1", "b2"))
m1 <- setMultiSiteEnsemblePaths(m, 2)
m2$run$site.a1$inputs
m2 <- setMultiSiteEnsemblePaths(
  m, 2, "poolinitcond",
  icdir = "some/long/path",
  path_template = "{icdir}/{id}/{n}.nc"
)
m2$run$site.a1$inputs
}
